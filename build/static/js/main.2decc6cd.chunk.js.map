{"version":3,"sources":["components/Editor.jsx","components/Navbar/Navbar.jsx","components/Themes/Themes.jsx","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","theme","useState","open","setOpen","savedTheme","console","log","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","extraKeys","matchBrackets","autoCloseBrackets","autoCloseTags","highlightSelectionMatches","Navbar","to","id","Themes","currentTheme","onChangeTheme","setTheme","useEffect","onSubmit","e","preventDefault","name","target","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","exact","path","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2decc6cd.chunk.js","sourcesContent":["import './styles.css';\n\nimport React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\n// Themes\nimport 'codemirror/theme/material.css'\nimport 'codemirror/theme/3024-day.css'\nimport 'codemirror/theme/isotope.css'\nimport 'codemirror/theme/duotone-light.css'\nimport 'codemirror/theme/nord.css'\nimport 'codemirror/theme/night.css'\n\n\n// Customizations\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/hint/xml-hint\";\nimport \"codemirror/addon/hint/html-hint\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/search/match-highlighter\";\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange,\n    theme\n  } = props\n  const [open, setOpen] = useState(true)\n\n  const savedTheme = theme\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  console.log(`Editor.js Theme: ${theme}`)\n  \n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n            lineWrapping: true,\n            lint: true,\n            mode: language,\n            theme: savedTheme,\n            lineNumbers: true,\n            extraKeys: {\n              \"Ctrl-Space\": \"autocomplete\"\n            },\n            matchBrackets: true, //underline matching bracket\n            autoCloseBrackets: true, //auto-close any brackets\n            autoCloseTags: true, //auto-close html tags\n            highlightSelectionMatches: true, //highlights matching words\n          }}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nconst Navbar = () => {\n\nreturn (\n    <>\n\n        <Link to=\"/\">\n            <button id=\"\">Home</button>\n        </Link>\n        <Link to=\"/themes\">\n            <button id=\"change-theme-button\">Change Theme</button>\n        </Link>\n        \n    </>\n)\n}\n\nexport default Navbar","import React, { useState, useEffect } from 'react'\n\n\nconst Themes = ({ currentTheme, onChangeTheme }) => {\n    const [theme, setTheme] = useState('material')\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(`THEME SAVED: ${theme}`)\n        onChangeTheme(theme);\n    }\n\n    useEffect(() => {\n      setTheme(currentTheme)\n    }, [])\n    \n\n    return (\n        <>\n            <h1>Select Theme</h1>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <select name=\"themes\" value={theme} id=\"themes\" onChange={(e) => setTheme(e.target.value)}>\n                    <option value=\"material\">Material</option>\n                    <option value=\"3024-day\">3024 Day</option>\n                    <option value=\"nord\">Nord</option>\n                    <option value=\"night\">Night</option>\n                    <option value=\"duotone-light\">Duotone Light</option>\n                    <option value=\"isotope\">Isotope</option>\n                </select>\n                <button type=\"submit\">Save</button>\n            </form>\n        </>\n    )\n}\n\nexport default Themes","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Editor from './Editor';\nimport Navbar from './Navbar/Navbar';\nimport Themes from './Themes/Themes';\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n  const [theme, setTheme] = useState('material')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  const handleChangeTheme = (theme) => {\n    setTheme(theme);\n  }\n  console.log(`Current Theme Saved: ${theme}`)\n  return (\n    <Router>\n      <Navbar />\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"pane top-pane\">\n            <Editor\n              language=\"xml\"\n              displayName=\"HTML\"\n              value={html}\n              onChange={setHtml}\n              theme={theme}\n            />\n            <Editor\n              language=\"css\"\n              displayName=\"CSS\"\n              value={css}\n              onChange={setCss}\n              theme={theme}\n            />\n            <Editor\n              language=\"javascript\"\n              displayName=\"JS\"\n              value={js}\n              onChange={setJs}\n              theme={theme}\n            />\n          </div>\n          <div className=\"pane\">\n            <iframe\n              srcDoc={srcDoc}\n              title=\"output\"\n              sandbox=\"allow-scripts\"\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </div>\n        </Route>\n        <Route exact path=\"/themes\">\n          <Themes currentTheme={theme} onChangeTheme={handleChangeTheme} />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}