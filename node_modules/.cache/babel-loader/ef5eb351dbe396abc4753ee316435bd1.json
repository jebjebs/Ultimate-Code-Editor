{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var WORD = /[\\w$]+/,\n      RANGE = 500;\n  CodeMirror.registerHelper(\"hint\", \"anyword\", function (editor, options) {\n    var word = options && options.word || WORD;\n    var range = options && options.range || RANGE;\n    var cur = editor.getCursor(),\n        curLine = editor.getLine(cur.line);\n    var end = cur.ch,\n        start = end;\n\n    while (start && word.test(curLine.charAt(start - 1))) --start;\n\n    var curWord = start != end && curLine.slice(start, end);\n    var list = options && options.list || [],\n        seen = {};\n    var re = new RegExp(word.source, \"g\");\n\n    for (var dir = -1; dir <= 1; dir += 2) {\n      var line = cur.line,\n          endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;\n\n      for (; line != endLine; line += dir) {\n        var text = editor.getLine(line),\n            m;\n\n        while (m = re.exec(text)) {\n          if (line == cur.line && m[0] === curWord) continue;\n\n          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {\n            seen[m[0]] = true;\n            list.push(m[0]);\n          }\n        }\n      }\n    }\n\n    return {\n      list: list,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});","map":{"version":3,"sources":["/Users/jevlopez/Documents/React-CodePen-Clone/node_modules/codemirror/addon/hint/anyword-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","WORD","RANGE","registerHelper","editor","options","word","range","cur","getCursor","curLine","getLine","line","end","ch","start","test","charAt","curWord","slice","list","seen","re","RegExp","source","dir","endLine","Math","min","max","firstLine","lastLine","text","m","exec","lastIndexOf","Object","prototype","hasOwnProperty","call","push","from","Pos","to"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var WORD = /[\\w$]+/, RANGE = 500;\n\n  CodeMirror.registerHelper(\"hint\", \"anyword\", function(editor, options) {\n    var word = options && options.word || WORD;\n    var range = options && options.range || RANGE;\n    var cur = editor.getCursor(), curLine = editor.getLine(cur.line);\n    var end = cur.ch, start = end;\n    while (start && word.test(curLine.charAt(start - 1))) --start;\n    var curWord = start != end && curLine.slice(start, end);\n\n    var list = options && options.list || [], seen = {};\n    var re = new RegExp(word.source, \"g\");\n    for (var dir = -1; dir <= 1; dir += 2) {\n      var line = cur.line, endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;\n      for (; line != endLine; line += dir) {\n        var text = editor.getLine(line), m;\n        while (m = re.exec(text)) {\n          if (line == cur.line && m[0] === curWord) continue;\n          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {\n            seen[m[0]] = true;\n            list.push(m[0]);\n          }\n        }\n      }\n    }\n    return {list: list, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end)};\n  });\n});\n"]},"metadata":{},"sourceType":"script"}