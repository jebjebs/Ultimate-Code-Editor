{"ast":null,"code":"var _jsxFileName = \"/Users/jevlopez/Documents/React-CodePen-Clone/src/components/Editor.js\";\nimport React, { useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/hint/html-hint\";\nimport \"codemirror/addon/hint/show-hint.css\";\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `editor-container ${open ? '' : 'collapsed'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, displayName, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"expand-collapse-btn\",\n    onClick: () => setOpen(prevOpen => !prevOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: open ? faCompressAlt : faExpandAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ControlledEditor, {\n    onBeforeChange: handleChange,\n    value: value,\n    className: \"code-mirror-wrapper\",\n    options: {\n      lineWrapping: true,\n      lint: true,\n      mode: language,\n      theme: 'material',\n      lineNumbers: true,\n      // undoDepth: 2,\n      // autocapitalize: true,\n      extraKeys: {\n        \"Ctrl-Space\": \"autocomplete\"\n      },\n      matchBrackets: true,\n      autoCloseBrackets: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jevlopez/Documents/React-CodePen-Clone/src/components/Editor.js"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prevOpen","lineWrapping","lint","mode","theme","lineNumbers","extraKeys","matchBrackets","autoCloseBrackets"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA+C,mBAA/C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mCAA3C;AAEA,OAAO,iCAAP;AACA,OAAO,uCAAP;AACA,OAAO,iCAAP;AACA,OAAO,qCAAP;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAMA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASc,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCN,KAApC,EAA2C;AACzCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAG,oBAAmBE,IAAI,GAAG,EAAH,GAAQ,WAAY,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WADH,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,OAAO,EAAE,MAAMI,OAAO,CAACI,QAAQ,IAAI,CAACA,QAAd,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEL,IAAI,GAAGR,aAAH,GAAmBC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CADF,eAWE,oBAAC,gBAAD;AACE,IAAA,cAAc,EAAES,YADlB;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAIE,IAAA,OAAO,EAAE;AACPQ,MAAAA,YAAY,EAAE,IADP;AAEPC,MAAAA,IAAI,EAAE,IAFC;AAGPC,MAAAA,IAAI,EAAEZ,QAHC;AAIPa,MAAAA,KAAK,EAAE,UAJA;AAKPC,MAAAA,WAAW,EAAE,IALN;AAMP;AACA;AACAC,MAAAA,SAAS,EAAE;AACT,sBAAc;AADL,OARJ;AAWPC,MAAAA,aAAa,EAAE,IAXR;AAYPC,MAAAA,iBAAiB,EAAE;AAZZ,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAiCD","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/hint/html-hint\";\nimport \"codemirror/addon/hint/show-hint.css\";\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n  const [open, setOpen] = useState(true)\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true,\n          // undoDepth: 2,\n          // autocapitalize: true,\n          extraKeys: {\n            \"Ctrl-Space\": \"autocomplete\"\n          },\n          matchBrackets: true,\n          autoCloseBrackets: true,\n        }}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}